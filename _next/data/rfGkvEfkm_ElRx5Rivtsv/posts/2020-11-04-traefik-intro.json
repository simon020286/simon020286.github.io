{"pageProps":{"source":{"compiledSource":"var l=Object.defineProperty,N=Object.defineProperties;var u=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var p=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable;var r=(e,n,s)=>n in e?l(e,n,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[n]=s,a=(e,n)=>{for(var s in n||(n={}))p.call(n,s)&&r(e,s,n[s]);if(o)for(var s of o(n))c.call(n,s)&&r(e,s,n[s]);return e},i=(e,n)=>N(e,u(n));var m=(e,n)=>{var s={};for(var t in e)p.call(e,t)&&n.indexOf(t)<0&&(s[t]=e[t]);if(e!=null&&o)for(var t of o(e))n.indexOf(t)<0&&c.call(e,t)&&(s[t]=e[t]);return s};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(s){var t=s,{components:e}=t,n=m(t,[\"components\"]);return mdx(MDXLayout,i(a(a({},layoutProps),n),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"Buongiorno,\",mdx(\"br\",{parentName:\"p\"}),`\n`,\"oggi parleremo da \",mdx(\"a\",a({parentName:\"p\"},{href:\"https://doc.traefik.io/traefik/\"}),\"Traefik\"),\", un HTTP reverse proxy e load balancer.\"),mdx(\"p\",null,mdx(\"img\",a({parentName:\"p\"},{src:\"https://doc.traefik.io/traefik/v1.7/img/architecture.png\",alt:\"architettura\"}))),mdx(\"p\",null,\"Io lo sto utilizzando per rendere accessibili dall'esterno dei servizi hostati sul mio nas, come ad esempio Home Assistant e l'ottimo password manager Bitwarden (di cui probabilmente parler\\xF2 su questo blog).\",mdx(\"br\",{parentName:\"p\"}),`\n`,\"Si integra perfettamente con docker, \\xE8 infatti in grado di leggere automaticamente le impostazioni da un container tramite label.\",mdx(\"br\",{parentName:\"p\"}),`\n`,\"Vediamo ora come installarlo proprio tramite docker, pi\\xF9 precisamente utilizzando docker-compose per semplificare le cose.\"),mdx(\"p\",null,'Per prima cosa scriviamo il file di configurazione. Ci sono vari modi per configurare Traefik, via argomenti da linea di comando o via file traefik.yml, che \\xE8 la strada che ho scelto io perch\\xE9 mi sembra pi\\xF9 chiara. Ho commentato direttamente nel file le parti \"meno\" importanti.'),mdx(\"pre\",a({},{className:\"language-yaml\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-yaml\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"---\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"global\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token comment\"}),\"# Verifica la presenza di nuove versioni.\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"checkNewVersion\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token boolean important\"}),\"true\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"entryPoints\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"http\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"address\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token number\"}),\"80\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"forwardedHeaders\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"insecure\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token boolean important\"}),\"true\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"proxyProtocol\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"insecure\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token boolean important\"}),\"true\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"https\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"address\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token number\"}),\"443\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"forwardedHeaders\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"insecure\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token boolean important\"}),\"true\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"proxyProtocol\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"insecure\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token boolean important\"}),\"true\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"providers\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"docker\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"watch\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token boolean important\"}),\"true\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"exposedByDefault\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token boolean important\"}),\"false\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"endpoint\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'unix:///var/run/docker.sock'\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"file\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"directory\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'/etc/traefik/dynamic/'\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"watch\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token boolean important\"}),\"true\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"api\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token comment\"}),\"# Visualizza l'interfaccia web della dashboard e permetti connessioni non sicure.\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"dashboard\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token boolean important\"}),\"true\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"insecure\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token boolean important\"}),\"true\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token comment\"}),\"# Salva il log nel percorso specificato, con livello DEBUG.\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token comment\"}),\"# Ovviamente una volta impostato e verificato il corretto funzionamento si pu\\xF2 abbassare il livello.\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"log\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"filePath\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'/shared/logs/traefik/traefik.log'\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"level\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),` DEBUG\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token comment\"}),\"# Salva il log delle chiamate nel percorso specificato.\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token comment\"}),\"# E' possibile specificare dei filtri, nel mio caso solo le chiamate con condici di errore.\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"accessLog\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"filePath\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'/shared/logs/traefik/access.log'\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"filters\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"statusCodes\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'400-599'\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token comment\"}),\"# Let's encrypt configuration\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"certificatesResolvers\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"le\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"acme\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"email\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" <email\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\">\"),`\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"storage\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),` /etc/traefik/acme/acme.json\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"tlschallenge\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token boolean important\"}),\"true\"),`\n`)),mdx(\"p\",null,\"Per prima cosa vengono definiti gli entry points sono i punti di ingresso che pu\\xF2 accettare il nostro proxy.\",mdx(\"br\",{parentName:\"p\"}),`\n`,\"Io mi attendo delle connessioni dalla porta 80 e 443, \\xE8 possibile aggiungere molte altre opzioni, ma per questo approfondimento vi rimando alla guida ufficiale.\",mdx(\"br\",{parentName:\"p\"}),`\n`,\"I providers sono le risorse da cui \\xE8 possibile accettare le configurazioni dinamiche, ossia i servizi, le routers e i middlewares.\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\"},\"docker: permette di creare delle configurazioni tramite le labels di un container.\"),mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",{parentName:\"ul\"},\"watch: true indica a traefik di rimanere in ascolto di modifiche sui containers, cos\\xEC non sar\\xE0 necessario riavviare il server ad ogni modifica.\"),mdx(\"li\",{parentName:\"ul\"},\"exposedByDefault: false, bisogna specificare in un container se esporlo a traefik, altrimenti per ogni nuovo container in esecuzione verr\\xE0 creato un servizio.\"),mdx(\"li\",{parentName:\"ul\"},`endpoint: \"unix:///var/run/docker.sock\" il percorso del sock di docker per permettere la comunicazione con esso. Nel nostro caso sar\\xE0 l'istanza di docker installata sul sistema host, come vedremo in seguito.`))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\"},\"file: permette di creare le configurazioni tramite file o files yaml o toml.\"),mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",{parentName:\"ul\"},`directory: \"/etc/traefik/dynamic/\" ho optato per indicare una cartella in modo da poter suddividere in modo pi\\xF9 ordinato le impostazioni. E' possibili anche indicare un singolo file tramite l'impostazione `,mdx(\"inlineCode\",{parentName:\"li\"},\"filename\"),\".\"),mdx(\"li\",{parentName:\"ul\"},\"watch: true come sopra.\")))),mdx(\"p\",null,\"L'altra parte molto importante del file \\xE8 \",mdx(\"inlineCode\",{parentName:\"p\"},\"certificatesResolvers\"),\", cio\\xE8 il modo in cui risolvere i certificati SSL.\",mdx(\"br\",{parentName:\"p\"}),`\n`,\"Nel mio caso utilizzo Let's Encrypt, un servizio gratuito che permette la generazione di certificati. Traefik integra gi\\xE0 tutto il funzionamento basta utilizzare come provider \",mdx(\"inlineCode\",{parentName:\"p\"},\"acme\"),\". Le altre impostazioni sono molto semplici, una email valida per ricevere avvisi di scadenza dei certificati e il percorso dove salvare gli stessi.\"),mdx(\"p\",null,\"Definita la configurazione base possiamo passare alla creazione del file docker-compose.yml per la creazione del container.\"),mdx(\"pre\",a({},{className:\"language-yaml\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-yaml\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"version\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'3'\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"networks\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"trproxy\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"driver\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),` bridge\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"services\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"traefik\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"container_name\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),` traefik\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"image\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" traefik\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`latest\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"restart\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" unless\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),`stopped\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"networks\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),` trproxy\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"environment\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),\" TZ\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),'\"Europe/Rome\"'),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"ports\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),\" 8080\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token number\"}),\"8080\"),`\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token datetime number\"}),\"80:80\"),`\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),\" 443\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token number\"}),\"443\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token key atrule\"}),\"volumes\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),\" /var/run/docker.sock\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\"/var/run/docker.sock\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`ro\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),\" <dir\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\">\"),\"/traefik.yml\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\"/etc/traefik/traefik.yml\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`ro\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),\" <dir\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\">\"),\"/dynamic\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\"/etc/traefik/dynamic/\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`ro\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),\" <dir\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\">\"),\"/acme/acme.json\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`/etc/traefik/acme/acme.json\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),\" <dir\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\">\"),\"/shared\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`/shared\n`)),mdx(\"p\",null,\"Per prima cosa viene definita la connessione, verr\\xE0 utilizzata dai containers che vogliono collegarsi a traeik.\",mdx(\"br\",{parentName:\"p\"}),`\n`,\"Le tre porte esposte sono:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"8080 dedicata alla dashboard\"),mdx(\"li\",{parentName:\"ul\"},\"80 per le connessioni non sicure\"),mdx(\"li\",{parentName:\"ul\"},\"443 per le connessioni sicure\")),mdx(\"p\",null,\"I volumi invece:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"/var/run/docker.sock percorso sock docker installato sull'host\")),mdx(\"p\",null,\"Scritto il file \",mdx(\"inlineCode\",{parentName:\"p\"},\"docker-compose.yml\"),\" lanciamo il servizio con \",mdx(\"inlineCode\",{parentName:\"p\"},\"docker-compose up -d\"),\". In base alla connessione e potenza della macchina host ci pu\\xF2 volere anche qualche minuto. Quando sar\\xE0 tutto finito potrete raggiungere la dashboard da browser tramite http:\",\"\\\\\",\"\\\\\",\"< ip della macchina su cui lo avete installato>:8080.\",mdx(\"br\",{parentName:\"p\"}),`\n`,\"Saranno gi\\xE0 presenti un paio di servizi, tranquilli sono quelli interni che vengono creati dal proxy.\"),mdx(\"p\",null,\"Con questo la piccola guida \\xE8 finita.\",mdx(\"br\",{parentName:\"p\"}),`\n`,\"Spero di esservi stato utile.\"))}MDXContent.isMDXComponent=!0;\n","scope":{}},"post":{"slug":"2020-11-04-traefik-intro","title":"Traefik - Intro","date":"2020-11-10T12:50:05.227Z","description":"Introduzione a traefik","image":null,"tags":["self-hosted","proxy","traefik"],"content":"\nBuongiorno,  \noggi parleremo da [Traefik](https://doc.traefik.io/traefik/), un HTTP reverse proxy e load balancer.\n\n![architettura](https://doc.traefik.io/traefik/v1.7/img/architecture.png)\n\nIo lo sto utilizzando per rendere accessibili dall'esterno dei servizi hostati sul mio nas, come ad esempio Home Assistant e l'ottimo password manager Bitwarden (di cui probabilmente parlerò su questo blog).   \nSi integra perfettamente con docker, è infatti in grado di leggere automaticamente le impostazioni da un container tramite label.  \nVediamo ora come installarlo proprio tramite docker, più precisamente utilizzando docker-compose per semplificare le cose.\n\nPer prima cosa scriviamo il file di configurazione. Ci sono vari modi per configurare Traefik, via argomenti da linea di comando o via file traefik.yml, che è la strada che ho scelto io perché mi sembra più chiara. Ho commentato direttamente nel file le parti \"meno\" importanti.\n\n```yaml\n---\nglobal:\n  # Verifica la presenza di nuove versioni.\n  checkNewVersion: true\n\nentryPoints:\n  http:\n    address: :80\n    forwardedHeaders:\n      insecure: true\n    proxyProtocol:\n      insecure: true\n  https:\n    address: :443\n    forwardedHeaders:\n      insecure: true\n    proxyProtocol:\n      insecure: true\n\nproviders:\n  docker:\n    watch: true\n    exposedByDefault: false\n    endpoint: 'unix:///var/run/docker.sock'\n  file:\n    directory: '/etc/traefik/dynamic/'\n    watch: true\n\napi:\n  # Visualizza l'interfaccia web della dashboard e permetti connessioni non sicure.\n  dashboard: true\n  insecure: true\n\n# Salva il log nel percorso specificato, con livello DEBUG.\n# Ovviamente una volta impostato e verificato il corretto funzionamento si può abbassare il livello.\nlog:\n  filePath: '/shared/logs/traefik/traefik.log'\n  level: DEBUG\n\n# Salva il log delle chiamate nel percorso specificato.\n# E' possibile specificare dei filtri, nel mio caso solo le chiamate con condici di errore.\naccessLog:\n  filePath: '/shared/logs/traefik/access.log'\n  filters:\n    statusCodes: ['400-599']\n\n# Let's encrypt configuration\ncertificatesResolvers:\n  le:\n    acme:\n      email: <email>\n      storage: /etc/traefik/acme/acme.json\n      tlschallenge: true\n```\n\nPer prima cosa vengono definiti gli entry points sono i punti di ingresso che può accettare il nostro proxy.  \nIo mi attendo delle connessioni dalla porta 80 e 443, è possibile aggiungere molte altre opzioni, ma per questo approfondimento vi rimando alla guida ufficiale.  \nI providers sono le risorse da cui è possibile accettare le configurazioni dinamiche, ossia i servizi, le routers e i middlewares.\n\n- docker: permette di creare delle configurazioni tramite le labels di un container.\n\n  - watch: true indica a traefik di rimanere in ascolto di modifiche sui containers, così non sarà necessario riavviare il server ad ogni modifica.\n  - exposedByDefault: false, bisogna specificare in un container se esporlo a traefik, altrimenti per ogni nuovo container in esecuzione verrà creato un servizio.\n  - endpoint: \"unix:///var/run/docker.sock\" il percorso del sock di docker per permettere la comunicazione con esso. Nel nostro caso sarà l'istanza di docker installata sul sistema host, come vedremo in seguito.\n\n- file: permette di creare le configurazioni tramite file o files yaml o toml.\n\n  - directory: \"/etc/traefik/dynamic/\" ho optato per indicare una cartella in modo da poter suddividere in modo più ordinato le impostazioni. E' possibili anche indicare un singolo file tramite l'impostazione `filename`.\n  - watch: true come sopra.\n\nL'altra parte molto importante del file è `certificatesResolvers`, cioè il modo in cui risolvere i certificati SSL.   \nNel mio caso utilizzo Let's Encrypt, un servizio gratuito che permette la generazione di certificati. Traefik integra già tutto il funzionamento basta utilizzare come provider `acme`. Le altre impostazioni sono molto semplici, una email valida per ricevere avvisi di scadenza dei certificati e il percorso dove salvare gli stessi.\n\nDefinita la configurazione base possiamo passare alla creazione del file docker-compose.yml per la creazione del container.\n\n```yaml\nversion: '3'\n\nnetworks:\n  trproxy:\n    driver: bridge\n\nservices:\n  traefik:\n    container_name: traefik\n    image: traefik:latest\n    restart: unless-stopped\n    networks:\n      - trproxy\n    environment:\n      - TZ:\"Europe/Rome\"\n    ports:\n      - 8080:8080\n      - 80:80\n      - 443:443\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n      - <dir>/traefik.yml:/etc/traefik/traefik.yml:ro\n      - <dir>/dynamic:/etc/traefik/dynamic/:ro\n      - <dir>/acme/acme.json:/etc/traefik/acme/acme.json\n      - <dir>/shared:/shared\n```\n\nPer prima cosa viene definita la connessione, verrà utilizzata dai containers che vogliono collegarsi a traeik.  \nLe tre porte esposte sono:\n\n- 8080 dedicata alla dashboard\n- 80 per le connessioni non sicure\n- 443 per le connessioni sicure\n\nI volumi invece:\n\n- /var/run/docker.sock percorso sock docker installato sull'host\n\nScritto il file `docker-compose.yml` lanciamo il servizio con `docker-compose up -d`. In base alla connessione e potenza della macchina host ci può volere anche qualche minuto. Quando sarà tutto finito potrete raggiungere la dashboard da browser tramite http:\\\\\\\\< ip della macchina su cui lo avete installato>:8080.  \nSaranno già presenti un paio di servizi, tranquilli sono quelli interni che vengono creati dal proxy.\n\nCon questo la piccola guida è finita.  \nSpero di esservi stato utile.\n"},"_superjson":{"values":{"post.date":["Date"],"post.image":["undefined"]}}},"__N_SSG":true}