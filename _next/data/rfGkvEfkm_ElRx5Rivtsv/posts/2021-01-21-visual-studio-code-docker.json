{"pageProps":{"source":{"compiledSource":"var l=Object.defineProperty,u=Object.defineProperties;var d=Object.getOwnPropertyDescriptors;var s=Object.getOwnPropertySymbols;var p=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;var c=(a,n,o)=>n in a?l(a,n,{enumerable:!0,configurable:!0,writable:!0,value:o}):a[n]=o,e=(a,n)=>{for(var o in n||(n={}))p.call(n,o)&&c(a,o,n[o]);if(s)for(var o of s(n))r.call(n,o)&&c(a,o,n[o]);return a},i=(a,n)=>u(a,d(n));var m=(a,n)=>{var o={};for(var t in a)p.call(a,t)&&n.indexOf(t)<0&&(o[t]=a[t]);if(a!=null&&s)for(var t of s(a))n.indexOf(t)<0&&r.call(a,t)&&(o[t]=a[t]);return o};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(o){var t=o,{components:a}=t,n=m(t,[\"components\"]);return mdx(MDXLayout,i(e(e({},layoutProps),n),{components:a,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"Ciao a tutti,\",mdx(\"br\",{parentName:\"p\"}),`\n`,\"oggi vi mostro il mio ambiente di sviluppo, programmi, linguaggi e tools che utilizzo.\",mdx(\"br\",{parentName:\"p\"}),`\n`,\"Per prima cosa come IDE (Integrated development environment) utilizzo l'ottimo Visual Studio Code di Microsoft.\",mdx(\"br\",{parentName:\"p\"}),`\n`,\"Trovate tutte le informazioni \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://code.visualstudio.com/\"}),\"qui\"),\".\",mdx(\"br\",{parentName:\"p\"}),`\n`,\"In breve \\xE8 un software multi-piattaforma, infatti lo trovate per Windows, MacOS e Linux, integra il controllo della versione del codice tramite git, esistono un'infinit\\xE0 di estensioni per facilitare lo sviluppo.\"),mdx(\"p\",null,mdx(\"img\",e({parentName:\"p\"},{src:\"https://res.cloudinary.com/drg2utgxr/image/upload/v1611249440/posts/vcode/home-screenshot-win-lg_vzx2kh.png\",alt:\"visual studio code\",title:\"Visual Studio Code\"}))),mdx(\"p\",null,'Grazie alle tantissime estensioni disponibili \\xE8 possibile programmare in qualsiasi linguaggio, ma in questo articolo vedremo come sviluppare in golang, sfruttando un container docker in cui installare il compilatore e tutto il necessario in modo da non \"sporcare\" il computer host.'),mdx(\"p\",null,`I prerequisti sono pochissimi, aver installato Docker, Visual Studio Code e l'estensione Remote - Containers.\nFatto questo baster\\xE0 creare la cartella del proprio progetto e al suo interno una cartella chiamata `,mdx(\"em\",{parentName:\"p\"},\".devcontainer,\"),mdx(\"br\",{parentName:\"p\"}),`\n`,\"all'interno di essa i seguenti file:\"),mdx(\"p\",null,mdx(\"em\",{parentName:\"p\"},\"Dockerfile\")),mdx(\"pre\",e({},{className:\"language-dockerfile\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-dockerfile\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"FROM\"),\" golang\",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),`1.16\n\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"ENV\"),` DEBIAN_FRONTEND=noninteractive\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"RUN\"),\" apt\",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),`get update \\\\\n    && apt`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),\"get \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),\"y install \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),\"no\",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),\"install\",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),\"recommends apt\",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),\"utils 2\",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\">\"),`&1\n\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"# Verify git, process tools, lsb-release (common in install instructions for CLIs) installed.\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"RUN\"),\" apt\",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),\"get \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),\"y install git iproute2 procps lsb\",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),`release\n\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"# Install Go tools.\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"RUN\"),\" go env \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),`w GO111MODULE=off \\\\\n    && apt`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),`get update \\\\\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"# Install gocode-gomod.\"),`\n    && go get `,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),\"x \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),\"d github.com/stamblerre/gocode 2\",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\">\"),`&1 \\\\\n    && go build `,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),\"o gocode\",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),`gomod github.com/stamblerre/gocode \\\\\n    && mv gocode`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),`gomod $GOPATH/bin/ \\\\\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"# Install other tools.\"),`\n    && go get `,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),`u \\\\\n        golang.org/x/tools/gopls \\\\\n        github.com/stamblerre/gocode \\\\\n        github.com/uudashr/gopkgs/cmd/gopkgs \\\\\n        github.com/ramya`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),\"rao\",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),\"a/go\",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),`outline \\\\\n        github.com/acroca/go`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),`symbols \\\\\n        golang.org/x/tools/cmd/guru \\\\\n        golang.org/x/tools/cmd/gorename \\\\\n        github.com/go`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),`delve/delve/cmd/dlv \\\\\n        github.com/stamblerre/gocode \\\\\n        github.com/rogpeppe/godef \\\\\n        golang.org/x/tools/cmd/goimports 2`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\">\"),`&1 \\\\\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"# Clean up.\"),`\n    && apt`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),\"get autoremove \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),`y \\\\\n    && apt`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),\"get clean \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),`y \\\\\n    && rm `,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),`rf /var/lib/apt/lists/* \\\\\n    && go env `,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"-\"),`w GO111MODULE=on\n\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"# Revert workaround at top layer.\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"ENV\"),` DEBIAN_FRONTEND=dialog\n\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"# Expose service ports.\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"EXPOSE\"),` 8000\n`)),mdx(\"p\",null,mdx(\"em\",{parentName:\"p\"},\"devcontainer.json\")),mdx(\"pre\",e({},{className:\"language-json\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-json\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"dockerFile\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"./Dockerfile\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"appPort\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n        `,mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"8000:8000\"'),`\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"extensions\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n        `,mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"golang.go\"'),`\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"p\",null,\"Fatto questo Visual Studio Code ti chieder\\xE0 se vuoi aprire il workspace all'interno del container, rispondere di si e attendere che docker crei il container. Probabilmente alla fine del processo vi verr\\xE0 suggerito di installare alcuni tool di golang, accettate e proseguite.\",mdx(\"br\",{parentName:\"p\"}),`\n`,\"Dopo qualche secondo sar\\xE0 possibile iniziare a sviluppare normalmente.\",mdx(\"br\",{parentName:\"p\"}),`\n`,\"La cosa bella di questo processo \\xE8 che i file che scriverete saranno fisicamente sul sistema host, quindi navigabili e gestibile dal file manager, ma tutte le librerie e eseguibili di go saranno all'interno del container.\",mdx(\"br\",{parentName:\"p\"}),`\n`,\"Questo rende pi\\xF9 semplice la gestione delle varie versione di golang e delle dipendenze dei propri progetti.\",mdx(\"br\",{parentName:\"p\"}),`\n`,\"Ovviamente tutto questo \\xE8 possibile utilizzarlo per molti linguaggi di programmazione ad esempio Python, Flutter, C# e molti altri.\"),mdx(\"p\",null,\"Spero di avervi aiutato e fatto scoprire qualcosa di nuovo.\",mdx(\"br\",{parentName:\"p\"}),`\n`,\"Come al solito contattatemi pure nei commenti se avete bisogno di aiuto.\"))}MDXContent.isMDXComponent=!0;\n","scope":{}},"post":{"slug":"2021-01-21-visual-studio-code-docker","title":"Visual Studio Code - Docker","date":"2021-08-06T09:02:15.620Z","description":"Sviluppare con Visual Studio Code all'interno di un container Docker","image":null,"tags":["visual studio code","ide","docker"],"content":"Ciao a tutti,  \noggi vi mostro il mio ambiente di sviluppo, programmi, linguaggi e tools che utilizzo.  \nPer prima cosa come IDE (Integrated development environment) utilizzo l'ottimo Visual Studio Code di Microsoft.  \nTrovate tutte le informazioni [qui](https://code.visualstudio.com/).  \nIn breve è un software multi-piattaforma, infatti lo trovate per Windows, MacOS e Linux, integra il controllo della versione del codice tramite git, esistono un'infinità di estensioni per facilitare lo sviluppo.\n\n![visual studio code](https://res.cloudinary.com/drg2utgxr/image/upload/v1611249440/posts/vcode/home-screenshot-win-lg_vzx2kh.png \"Visual Studio Code\")\n\nGrazie alle tantissime estensioni disponibili è possibile programmare in qualsiasi linguaggio, ma in questo articolo vedremo come sviluppare in golang, sfruttando un container docker in cui installare il compilatore e tutto il necessario in modo da non \"sporcare\" il computer host.\n\nI prerequisti sono pochissimi, aver installato Docker, Visual Studio Code e l'estensione Remote - Containers.\nFatto questo basterà creare la cartella del proprio progetto e al suo interno una cartella chiamata *.devcontainer,*  \nall'interno di essa i seguenti file:\n\n*Dockerfile*\n\n```dockerfile\nFROM golang:1.16\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update \\\n    && apt-get -y install --no-install-recommends apt-utils 2>&1\n\n# Verify git, process tools, lsb-release (common in install instructions for CLIs) installed.\nRUN apt-get -y install git iproute2 procps lsb-release\n\n# Install Go tools.\nRUN go env -w GO111MODULE=off \\\n    && apt-get update \\\n    # Install gocode-gomod.\n    && go get -x -d github.com/stamblerre/gocode 2>&1 \\\n    && go build -o gocode-gomod github.com/stamblerre/gocode \\\n    && mv gocode-gomod $GOPATH/bin/ \\\n    # Install other tools.\n    && go get -u \\\n        golang.org/x/tools/gopls \\\n        github.com/stamblerre/gocode \\\n        github.com/uudashr/gopkgs/cmd/gopkgs \\\n        github.com/ramya-rao-a/go-outline \\\n        github.com/acroca/go-symbols \\\n        golang.org/x/tools/cmd/guru \\\n        golang.org/x/tools/cmd/gorename \\\n        github.com/go-delve/delve/cmd/dlv \\\n        github.com/stamblerre/gocode \\\n        github.com/rogpeppe/godef \\\n        golang.org/x/tools/cmd/goimports 2>&1 \\\n    # Clean up.\n    && apt-get autoremove -y \\\n    && apt-get clean -y \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && go env -w GO111MODULE=on\n\n# Revert workaround at top layer.\nENV DEBIAN_FRONTEND=dialog\n\n# Expose service ports.\nEXPOSE 8000\n```\n\n*devcontainer.json*\n\n```json\n{\n    \"dockerFile\": \"./Dockerfile\",\n    \"appPort\": [\n        \"8000:8000\"\n    ],\n    \"extensions\": [\n        \"golang.go\"\n    ]\n}\n```\n\nFatto questo Visual Studio Code ti chiederà se vuoi aprire il workspace all'interno del container, rispondere di si e attendere che docker crei il container. Probabilmente alla fine del processo vi verrà suggerito di installare alcuni tool di golang, accettate e proseguite.  \nDopo qualche secondo sarà possibile iniziare a sviluppare normalmente.  \nLa cosa bella di questo processo è che i file che scriverete saranno fisicamente sul sistema host, quindi navigabili e gestibile dal file manager, ma tutte le librerie e eseguibili di go saranno all'interno del container.  \nQuesto rende più semplice la gestione delle varie versione di golang e delle dipendenze dei propri progetti.  \nOvviamente tutto questo è possibile utilizzarlo per molti linguaggi di programmazione ad esempio Python, Flutter, C# e molti altri.\n\nSpero di avervi aiutato e fatto scoprire qualcosa di nuovo.  \nCome al solito contattatemi pure nei commenti se avete bisogno di aiuto."},"_superjson":{"values":{"post.date":["Date"],"post.image":["undefined"]}}},"__N_SSG":true}